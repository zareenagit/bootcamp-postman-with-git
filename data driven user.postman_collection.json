{
	"info": {
		"_postman_id": "5cdace51-6c07-442d-94bb-ff4a8b3aea78",
		"name": "data driven user",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37259522"
	},
	"item": [
		{
			"name": "P_POST CREATE USER POSITIVE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// capturing json response in json data\r",
							" const jsonData = pm.response.json();\r",
							"\r",
							"//validating status code\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"//validating status line\r",
							"pm.test(\"Status line is correct\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"\r",
							"//validating header\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Content-Type is application/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
							"});\r",
							"\r",
							"// validating User ID in Response\r",
							"pm.test(\"User ID is returned in the response\", function () {\r",
							"    pm.expect(jsonData.user_id).to.exist;\r",
							"});\r",
							"\r",
							"// storing autogenerated id\r",
							"const userId = jsonData.user_id;\r",
							"    pm.collectionVariables.set(\"userId\", userId);\r",
							"\r",
							"//checking user id in console\r",
							"console.log(\"User ID  captured:\", userId); \r",
							"\r",
							"// validating data fields\r",
							"pm.test(\"Response should have required fields\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"user_first_name\");\r",
							"    pm.expect(jsonData).to.have.property(\"user_last_name\");\r",
							"    pm.expect(jsonData).to.have.property(\"user_contact_number\");\r",
							"    pm.expect(jsonData).to.have.property(\"user_email_id\");\r",
							"    pm.expect(jsonData).to.have.property(\"userAddress\");\r",
							"    // Validate address fields\r",
							"    pm.expect(jsonData.userAddress).to.have.property(\"plotNumber\");\r",
							"    pm.expect(jsonData.userAddress).to.have.property(\"street\");\r",
							"    pm.expect(jsonData.userAddress).to.have.property(\"state\");\r",
							"    pm.expect(jsonData.userAddress).to.have.property(\"country\");\r",
							"    pm.expect(jsonData.userAddress).to.have.property(\"zipCode\");\r",
							"});\r",
							"\r",
							"//validating data values\r",
							"pm.test(\"Response should contain user_first_name\", function () { \r",
							"    pm.expect(jsonData.user_first_name).to.eql(\"latha\");\r",
							"});\r",
							"pm.test(\"Response should contain user_last_name\", function () {\r",
							"    pm.expect(jsonData.user_last_name).to.eql(\"reddy\");\r",
							"});\r",
							"\r",
							"pm.test(\"user_contact_number is a string\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.user_contact_number.toString()).to.eql(\"3335678901\");\r",
							"});\r",
							"\r",
							"pm.test(\"zipCode is a string\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userAddress.zipCode.toString()).to.eql(\"19067\");\r",
							"});\r",
							"\r",
							"// validating unique email\r",
							"pm.test(\"user_email_id should be unique\", function () { \r",
							"    const existingEmail = \"SHIVA@gmail.com\"; \r",
							"    pm.expect(jsonData.user_email_id).to.not.eql(existingEmail);\r",
							"});\r",
							"\r",
							"// validating unique contact number\r",
							"pm.test(\"user_contact_number should be unique\", function () {\r",
							"    const existingcontact_number = \"5674839212\";\r",
							"    pm.expect(jsonData.user_contact_number).to.not.eql(existingcontact_number);\r",
							"});\r",
							"\r",
							"//validating schema\r",
							"\r",
							"const schema = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        user_first_name: { type: \"string\" },\r",
							"        user_last_name: { type: \"string\" },\r",
							"        user_contact_number: { type: \"number\" },\r",
							"        user_email_id: { type: \"string\"},\r",
							"        userAddress: {\r",
							"            type: \"object\",\r",
							"            properties: {\r",
							"                plotNumber: { type: \"string\" },\r",
							"                street: { type: \"string\" },\r",
							"                state: { type: \"string\" },\r",
							"                country: { type: \"string\" },\r",
							"                zipCode: { type: \"number\" }\r",
							"            },\r",
							"            required: [\"plotNumber\", \"street\", \"state\", \"country\", \"zipCode\"]\r",
							"        }\r",
							"    },\r",
							"    required: [\"user_first_name\", \"user_last_name\", \"user_contact_number\", \"user_email_id\", \"userAddress\"]\r",
							"};\r",
							"\r",
							"pm.test(\"Response matches the schema\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{post_users_end_point}}",
					"host": [
						"{{baseurl}}{{post_users_end_point}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_ post_Empty End Point",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "N_ post_invalid End Point",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{invalid_end_point}}",
					"host": [
						"{{baseurl}}{{invalid_end_point}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_ post_Space Between URL And Endpoint",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}} {{post_users_end_point}}",
					"host": [
						"{{baseurl}} {{post_users_end_point}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_ post_Empty first name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{post_users_end_point}}",
					"host": [
						"{{baseurl}}{{post_users_end_point}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_post_Empty last name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{post_users_end_point}}",
					"host": [
						"{{baseurl}}{{post_users_end_point}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_post_Empty contact number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{post_users_end_point}}",
					"host": [
						"{{baseurl}}{{post_users_end_point}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_post_Empty email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{post_users_end_point}}",
					"host": [
						"{{baseurl}}{{post_users_end_point}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Post_ Duplicate Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 409\", function () {\r",
							"pm.response.to.have.status(409);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"//validating duplicate email\r",
							"pm.test(\"user_email_id should not be 'reddy@gmail.com'\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    const expectedEmail = \"reddy@gmail.com\"; \r",
							"    pm.expect(jsonData.user_email_id).to.not.eql(expectedEmail);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{post_users_end_point}}",
					"host": [
						"{{baseurl}}{{post_users_end_point}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_post_Duplicate contact number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 409\", function () {\r",
							"pm.response.to.have.status(409);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"//validating duplicate contact number\r",
							"pm.test(\"user_contact_number should not be '3335678901'\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    const expectedCntactnumber = \"3335678901\"; \r",
							"    pm.expect(jsonData.user_email_id).to.not.eql(expectedCntactnumber);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{post_users_end_point}}",
					"host": [
						"{{baseurl}}{{post_users_end_point}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_post_9 Digit Contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{post_users_end_point}}",
					"host": [
						"{{baseurl}}{{post_users_end_point}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_post_Invalid Email format",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{post_users_end_point}}",
					"host": [
						"{{baseurl}}{{post_users_end_point}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_post_Invalid Plotnumber",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{post_users_end_point}}",
					"host": [
						"{{baseurl}}{{post_users_end_point}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_post_Invalid street with numbers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{post_users_end_point}}",
					"host": [
						"{{baseurl}}{{post_users_end_point}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_post_Invalid State Spl Characters",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{post_users_end_point}}",
					"host": [
						"{{baseurl}}{{post_users_end_point}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_post_Country With Numbers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{post_users_end_point}}",
					"host": [
						"{{baseurl}}{{post_users_end_point}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_post_Zipcode With Alphabet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{post_users_end_point}}",
					"host": [
						"{{baseurl}}{{post_users_end_point}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "P_PUT UPDATE USER POSITIVE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"let responseData = pm.response.json();\r",
							"\r",
							"//validating updated first name\r",
							"\r",
							"pm.test(\"Response contains updated last name\", function () {\r",
							"pm.expect(responseData.user_last_name).to.eql(\"laasya\");\r",
							"});\r",
							"\r",
							"// Validate that the user ID in the PUT request response matches the created user ID\r",
							"\r",
							"let createdUserId = pm.collectionVariables.get(\"userId\");\r",
							"pm.test(\"User ID matches the created user ID\", function () {\r",
							"pm.expect(responseData.user_id, 'User ID in response should be defined').to.not.be.undefined;\r",
							" pm.expect(responseData.user_id).to.eql(createdUserId);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{put_update_endpoint}}{{userId}}",
					"host": [
						"{{baseurl}}{{put_update_endpoint}}{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B_Put_User Updated No Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{put_update_endpoint}}{{userId}}",
					"host": [
						"{{baseurl}}{{put_update_endpoint}}{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Put_Empty End Point",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Put_End Point With No Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 405\", function () {\r",
							"pm.response.to.have.status(405);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{post_users_end_point}}",
					"host": [
						"{{baseurl}}{{post_users_end_point}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Put_Empty First Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{put_update_endpoint}}{{userId}}",
					"host": [
						"{{baseurl}}{{put_update_endpoint}}{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Put_Empty Last Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{put_update_endpoint}}{{userId}}",
					"host": [
						"{{baseurl}}{{put_update_endpoint}}{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Put_First Name With Special Characters",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{put_update_endpoint}}{{userId}}",
					"host": [
						"{{baseurl}}{{put_update_endpoint}}{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Put_Empty Contact Number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{put_update_endpoint}}{{userId}}",
					"host": [
						"{{baseurl}}{{put_update_endpoint}}{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Put_Empty Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{put_update_endpoint}}{{userId}}",
					"host": [
						"{{baseurl}}{{put_update_endpoint}}{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Put_9 Digit Phone Number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{put_update_endpoint}}{{userId}}",
					"host": [
						"{{baseurl}}{{put_update_endpoint}}{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Put_Invalid Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{put_update_endpoint}}({{userId}}",
					"host": [
						"{{baseurl}}{{put_update_endpoint}}({{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Put_Plot Number Special Characters",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{put_update_endpoint}}{{userId}}",
					"host": [
						"{{baseurl}}{{put_update_endpoint}}{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Put_ Street Special Characters",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{put_update_endpoint}}{{userId}}",
					"host": [
						"{{baseurl}}{{put_update_endpoint}}{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Put_State With Numbers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{put_update_endpoint}}{{userId}}",
					"host": [
						"{{baseurl}}{{put_update_endpoint}}{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Put_Country With Numbers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{put_update_endpoint}}{{userId}}",
					"host": [
						"{{baseurl}}{{put_update_endpoint}}{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Put_Zipcode With Spaces",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validating content type\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{put_update_endpoint}}{{userId}}",
					"host": [
						"{{baseurl}}{{put_update_endpoint}}{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "P_GET ALL USERS POSITIVE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}{{get_all_users}}",
					"host": [
						"{{baseurl}}{{get_all_users}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Get Users With Invalid End Point",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}{{invalid_end_point}}",
					"host": [
						"{{baseurl}}{{invalid_end_point}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Get Users With No End Point",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}",
					"host": [
						"{{baseurl}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Get Users Invalid url",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{invalidurl}}{{get_all_users}}",
					"host": [
						"{{invalidurl}}{{get_all_users}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Get Users With Invalid Method",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 405\", function () {\r",
							"    pm.response.to.have.status(405);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseurl}}{{get_all_users}}",
					"host": [
						"{{baseurl}}{{get_all_users}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B__GET USERS WITH NO AUTH",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}{{get_all_users}}",
					"host": [
						"{{baseurl}}{{get_all_users}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "P_GET  BY ID POSITIVE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}{{get_user_by_id}}{{userId}}",
					"host": [
						"{{baseurl}}{{get_user_by_id}}{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B_Get By Id With No Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}{{get_user_by_id}}{{userId}}",
					"host": [
						"{{baseurl}}{{get_user_by_id}}{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Get By Id  With Invalid Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}{{get_user_by_id}}{{invalidid}}",
					"host": [
						"{{baseurl}}{{get_user_by_id}}{{invalidid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Get By Id With No Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}{{get_user_by_id}}",
					"host": [
						"{{baseurl}}{{get_user_by_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "P_GET  BY FIRST NAME",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}{{get_user_by_firstname}}",
					"host": [
						"{{baseurl}}{{get_user_by_firstname}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B_GET BY FIRST NAME NO AUTH",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}{{get_user_by_firstname}}",
					"host": [
						"{{baseurl}}{{get_user_by_firstname}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Get By First Name With Out End Point",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}",
					"host": [
						"{{baseurl}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Get First Name With Invalid First Namr",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}{{invalid_first_name}}",
					"host": [
						"{{baseurl}}{{invalid_first_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "P_DELETE BY ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validate the status code\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let responseData = pm.response.json();\r",
							"// Validate the 'status' field\r",
							"pm.test(\"Status\", function () {\r",
							"    pm.expect(responseData.status).to.equal(\"Success\");\r",
							"});\r",
							"\r",
							"// Validate the 'message' field\r",
							"pm.test(\"Message\", function () {\r",
							"    pm.expect(responseData.message).to.equal(\"User is deleted successfully\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseurl}}{{delete_by_id}}{{userId}}",
					"host": [
						"{{baseurl}}{{delete_by_id}}{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Delete By Id With Deleted Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validate the status code\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseurl}}{{delete_by_id}}{{userId}}",
					"host": [
						"{{baseurl}}{{delete_by_id}}{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Delete By id With Invalid Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validate the status code\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseurl}}{{delete_by_id}}{{invalidid}}",
					"host": [
						"{{baseurl}}{{delete_by_id}}{{invalidid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Delete IBy d With No Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validate the status code\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseurl}}{{delete_by_id}}",
					"host": [
						"{{baseurl}}{{delete_by_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST_CREATE USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"// capturing json response in json data\r",
							" const jsonData = pm.response.json();\r",
							" \r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"// validating data fields\r",
							"pm.test(\"Response should have required fields\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"user_first_name\");\r",
							"    pm.expect(jsonData).to.have.property(\"user_last_name\");\r",
							"    pm.expect(jsonData).to.have.property(\"user_contact_number\");\r",
							"    pm.expect(jsonData).to.have.property(\"user_email_id\");\r",
							"    pm.expect(jsonData).to.have.property(\"userAddress\");\r",
							"    // Validate address fields\r",
							"    pm.expect(jsonData.userAddress).to.have.property(\"plotNumber\");\r",
							"    pm.expect(jsonData.userAddress).to.have.property(\"street\");\r",
							"    pm.expect(jsonData.userAddress).to.have.property(\"state\");\r",
							"    pm.expect(jsonData.userAddress).to.have.property(\"country\");\r",
							"    pm.expect(jsonData.userAddress).to.have.property(\"zipCode\");\r",
							"});\r",
							"\r",
							"//validating schema\r",
							"\r",
							"const schema = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        user_first_name: { type: \"string\" },\r",
							"        user_last_name: { type: \"string\" },\r",
							"        user_contact_number: { type: \"number\" },\r",
							"        user_email_id: { type: \"string\"},\r",
							"        userAddress: {\r",
							"            type: \"object\",\r",
							"            properties: {\r",
							"                plotNumber: { type: \"string\" },\r",
							"                street: { type: \"string\" },\r",
							"                state: { type: \"string\" },\r",
							"                country: { type: \"string\" },\r",
							"                zipCode: { type: \"number\" }\r",
							"            },\r",
							"            required: [\"plotNumber\", \"street\", \"state\", \"country\", \"zipCode\"]\r",
							"        }\r",
							"    },\r",
							"    required: [\"user_first_name\", \"user_last_name\", \"user_contact_number\", \"user_email_id\", \"userAddress\"]\r",
							"};\r",
							"\r",
							"pm.test(\"Response matches the schema\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_first_name\": \"{{user_first_name}}\",\r\n  \"user_last_name\": \"{{user_last_name}}\",\r\n  \"user_contact_number\": \"{{user_contact_number}}\",\r\n  \"user_email_id\": \"{{user_email_id}}\",\r\n  \"userAddress\": {\r\n    \"plotNumber\": \"{{plotNumber}}\",\r\n    \"street\": \"{{street}}\",\r\n    \"state\": \"{{state}}\",\r\n    \"country\": \"{{country}}\",\r\n    \"zipCode\": \"{{zipCode}}\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{post_users_end_point}}",
					"host": [
						"{{baseurl}}{{post_users_end_point}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "P_DELETE BY FIRST NAME",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validate the status code\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let responseData = pm.response.json();\r",
							"// Validate the 'status' field\r",
							"pm.test(\"Status\", function () {\r",
							"    pm.expect(responseData.status).to.equal(\"Success\");\r",
							"});\r",
							"\r",
							"// Validate the 'message' field\r",
							"pm.test(\"Message\", function () {\r",
							"    pm.expect(responseData.message).to.equal(\"User is deleted successfully\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseurl}}{{delete_by_firstname}}",
					"host": [
						"{{baseurl}}{{delete_by_firstname}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Delete By First Name With Missing End Point",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validate the status code\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseurl}}",
					"host": [
						"{{baseurl}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N_Delete Id With Invalid End Point",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validate the status code\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseurl}} {{invalid_end_point}}",
					"host": [
						"{{baseurl}} {{invalid_end_point}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "N-Delete Id with Deleted First Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validate the status code\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseurl}}{{delete_by_firstname}}",
					"host": [
						"{{baseurl}}{{delete_by_firstname}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "username",
			"value": "Numpy@gmail.com",
			"type": "string"
		},
		{
			"key": "password",
			"value": "userapi@october",
			"type": "string"
		},
		{
			"key": "baseurl",
			"value": " https://userserviceapp-f5a54828541b.herokuapp.com/uap",
			"type": "string"
		},
		{
			"key": "post_users_end_point",
			"value": "/createusers",
			"type": "string"
		},
		{
			"key": "get_all_users",
			"value": "/users",
			"type": "string"
		},
		{
			"key": "put_update_endpoint",
			"value": "/updateuser/",
			"type": "string"
		},
		{
			"key": "get_user_by_firstname",
			"value": "/users/username/latha",
			"type": "string"
		},
		{
			"key": "delete_by_id",
			"value": "/deleteuser/",
			"type": "string"
		},
		{
			"key": "delete_by_firstname",
			"value": "/deleteuser/username/latha",
			"type": "string"
		},
		{
			"key": "get_user_by_id",
			"value": "/user/",
			"type": "string"
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "invalidurl",
			"value": " https://userserviceapp-f5a54828541b.herokuapp.com",
			"type": "string"
		},
		{
			"key": "invalidid",
			"value": "xyz",
			"type": "string"
		},
		{
			"key": "invalid_first_name",
			"value": "/users/username/lath",
			"type": "string"
		},
		{
			"key": "invalid_end_point",
			"value": "/deleteuser",
			"type": "string"
		}
	]
}